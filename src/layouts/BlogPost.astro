---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { bibState } from '@/components/svelte/bib/BibState.svelte';
import { ModeWatcher } from 'mode-watcher';
import ToggleDark from '@/components/svelte/ToggleDark.svelte';
import { Image } from 'astro:assets';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;

bibState.clear();
---

<script is:inline>
  const isBrowser = typeof localStorage !== 'undefined';
  const getThemePreference = () => {
    if (isBrowser && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches
      ? 'dark'
      : 'light';
  };
  const isDark = getThemePreference() === 'dark';
  document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

  if (isBrowser) {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains('dark');
      localStorage.setItem('theme', isDark ? 'dark' : 'light');
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ['class'],
    });
  }
</script>

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
  </head>

  <body class="bg-lime-50 dark:bg-lime-950 print:bg-white">
    <ModeWatcher client:load />

    <aside class="fixed top-1 right-1 print:hidden">
      <ToggleDark client:load />
    </aside>

    <main class="w-full print:*:w-screen">
      <article>
        <div class="print:hidden hidden">
          {
            heroImage && (
              <Image
                class="mx-auto saturate-50 opacity-80"
                width={1020}
                height={510}
                src={heroImage}
                alt=""
              />
            )
          }
        </div>

        <div
          class="prose sticky mx-auto -mt-10 mb-10 top-0 p-2 bg-lime-50/80 backdrop-blur dark:bg-lime-950 print:hidden"
        >
          <h1 class="!m-0 p-0">{title}</h1>
          <div class="date">
            <FormattedDate date={pubDate} />
            {
              updatedDate && (
                <div class="last-updated-on">
                  Last updated on <FormattedDate date={updatedDate} />
                </div>
              )
            }
          </div>
        </div>

        <div
          class="prose dark:prose-invert prose-orange mx-auto mt-16 px-4 text-lime-950 print:text-black "
        >
          <slot />
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>
